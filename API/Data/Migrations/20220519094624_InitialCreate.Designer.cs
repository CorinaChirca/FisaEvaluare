// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220519094624_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API.Entities.AppAngajati", b =>
                {
                    b.Property<Guid>("AngajatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AngajatNume")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("ManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AngajatId");

                    b.HasIndex("AngajatNume");

                    b.HasIndex("ManagerId");

                    b.ToTable("Angajati");
                });

            modelBuilder.Entity("API.Entities.AppDenumireCampuriTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DenumireTabeleTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Denumire_campuri")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DenumireTabeleTemplateId");

                    b.HasIndex("Denumire_campuri");

                    b.ToTable("DenumireCampuriTemplate");
                });

            modelBuilder.Entity("API.Entities.AppDenumireTabeleTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Denumire_tabele")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Denumire_tabele");

                    b.ToTable("DenumireTabeleTemplate");
                });

            modelBuilder.Entity("API.Entities.AppManageri", b =>
                {
                    b.Property<Guid>("ManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Departament")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagerNume")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ManagerId");

                    b.ToTable("Manageri");
                });

            modelBuilder.Entity("API.Entities.AppNote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nota")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Nota");

                    b.ToTable("Note");
                });

            modelBuilder.Entity("API.Entities.AppPerioadaEvaluare", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AngajatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DenumireTabeleTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NoteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Perioada_evaluare_end")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Perioada_evaluare_start")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AngajatId");

                    b.HasIndex("DenumireTabeleTemplateId")
                        .IsUnique();

                    b.HasIndex("NoteId")
                        .IsUnique();

                    b.HasIndex("Perioada_evaluare_end");

                    b.HasIndex("Perioada_evaluare_start");

                    b.ToTable("PerioadaEvaluare");
                });

            modelBuilder.Entity("API.Entities.AppAngajati", b =>
                {
                    b.HasOne("API.Entities.AppManageri", "AppManageri")
                        .WithMany("Angajati")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppManageri");
                });

            modelBuilder.Entity("API.Entities.AppDenumireCampuriTemplate", b =>
                {
                    b.HasOne("API.Entities.AppDenumireTabeleTemplate", "AppDenumireTabeleTemplate")
                        .WithMany("DenumireCampuriTemplate")
                        .HasForeignKey("DenumireTabeleTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppDenumireTabeleTemplate");
                });

            modelBuilder.Entity("API.Entities.AppPerioadaEvaluare", b =>
                {
                    b.HasOne("API.Entities.AppAngajati", "AppAngajati")
                        .WithMany("PerioadaEvaluare")
                        .HasForeignKey("AngajatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Entities.AppDenumireTabeleTemplate", "DenumireTabeleTemplate")
                        .WithOne("AppPerioadaEvaluare")
                        .HasForeignKey("API.Entities.AppPerioadaEvaluare", "DenumireTabeleTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Entities.AppNote", "Note")
                        .WithOne("AppPerioadaEvaluare")
                        .HasForeignKey("API.Entities.AppPerioadaEvaluare", "NoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppAngajati");

                    b.Navigation("DenumireTabeleTemplate");

                    b.Navigation("Note");
                });

            modelBuilder.Entity("API.Entities.AppAngajati", b =>
                {
                    b.Navigation("PerioadaEvaluare");
                });

            modelBuilder.Entity("API.Entities.AppDenumireTabeleTemplate", b =>
                {
                    b.Navigation("AppPerioadaEvaluare");

                    b.Navigation("DenumireCampuriTemplate");
                });

            modelBuilder.Entity("API.Entities.AppManageri", b =>
                {
                    b.Navigation("Angajati");
                });

            modelBuilder.Entity("API.Entities.AppNote", b =>
                {
                    b.Navigation("AppPerioadaEvaluare");
                });
#pragma warning restore 612, 618
        }
    }
}
